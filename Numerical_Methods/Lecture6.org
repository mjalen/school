#+title: MATH 4200 Lecture 6
#+author: Jalen Moore

02/08 - Starting Chapter 2 today.

* MatLab Primer
** Notes

- To denote a vector to a power, do ~x.^2~. This signifies that $x$ can be a vector and the exponent computes the dot product.

- Example MatLab script:
#+begin_src text
  function output=FunctionName(input)
  output=...;
#+end_src

The format of the script is to set the ~output~ using the MatLab equilvanet of /tuple decomposition/. Scripts can be either functionally defined or procedurally defined.

** Example

Consider $2x^2 - 3x +1$.

#+begin_src text
  function y=myfunc(x)
  y= 2*x.^2 - 3*x + 1;
#+end_src

Then from the command window and in the same CWD as the ~myfunc.m~ script, the function ~myfunc()~ can be accessed.

* Non-Linear Equations
** Goal

*Goal:* Solve root-finding problem.
- Given $f(x)$, find its roots.

In general, we need a /numerical method/ to solve $f(x)=0$. When using this approach, each method gives only /one/ root. All /numerical methods/ we discuss generate a *sequence of approximations $\{p_n\}$* by iteration. Each iteration gives a better approximation than the last.

*** Example

Consider $x - e^{-x}=0$. This problem is difficult to find analytically, hence the need for a numerical method.

** Iteration

Questions to ask:

- *Where to start?* We simply have to guess.
- *Does it converge?*
- *When do we stop iterating?*

    \begin{align*}
    |f(p_n) | \leq ToP.
    \end{align*}

    If the absolute error is less than a given *tolerance*, we can stop iterating.

    \begin{align*}
    | P_n - P_{n-1} | \leq Tol.
    \end{align*}

    Another sign to stop is:

    \begin{align*}
        \left| \frac{P_n - P_{n-1}}{P_n} \right| \leq Top.
    \end{align*}

- *How fast?* There are many numerical methods for solving roots, each with advantages and disadvantages.

* Bisection Method (Section 2.1)
** Definition

Suppose $f\in C[a,b]$ and $f(a)\cdot f(b) < 0$. By the IVT, there is $p\in(a,b)$ s.t. $f(p)=0$.

Assume $p$ is unique in $[a,b]$. The *Bisection Method* generates a seq. $\{p_n\}$ as follows.

\begin{align*}
  a_1 = a;\\
  b_1 = b.
\end{align*}

Let $p_1 = (a_1 + b_1) / 2$ (mean in the interval). Two cases occur,

- If $f(p_1)=0$, we are done and have our root.
- If $f(p_1)\neq 0$, then $f(p_1)$ has the same sign as either boundary $f(a_1)$ or $f(b_1)$.
  - If $f(a_1)f(p_1) < 0$, then iterate where $a_2 = a_1$ and $b_2 = p_1$.
  - If $f(b_1)f(p_1) < 0$, then iterate where $a_2 = p_1$ and $b_2 = b_1$.

#+begin_src python
  # draft of bisection method in python.
  def bisect_method(f, a, b, tol=0.001):
      fa = f(a)
      fb = f(b)
      p = (a + b) / 2
      fp = f(p)

      # edit this tolerance condition
      if math.abs(fp) >= tol:
          return p

      if fa * fp < 0:
          return bisect_method(f, a, p)
      elif fb * fp < 0:
          return bisect_method(f, p, b)

      return p
#+end_src

Note that the condition to find the boundaries of the next iteration is simply our IVT check above.

*** Example

Let $f(x)=x^2-2$, $[a,b]=[1,2]$.

|   n |         $a_n$ |         $b_n$ |        $p_n$ |    $f(p_n)$ | $abs(p_n - \sqrt{2})$ |
|-----+---------------+---------------+--------------+-------------+-----------------------|
|   1 |             1 |             2 |          1.5 |        0.25 |                       |
|   2 |             1 |           1.5 |         1.25 |       -0.43 |                       |
|   3 |          1.25 |           1.5 |        1.375 |      -0.109 |                       |
|   4 |         1.375 |           1.5 |              |             |                       |
| ... |               |               |              |             |                       |
|  10 | $1.414\ldots$ | $1.416\ldots$ | $1.45\ldots$ | $2.3\times 10^{-3}$ | $8.2\times 10^{-4}$   |

** Theorem

Suppose $f\inC[a,b]$ and $f(a)\cdot f(b) < 0$. Then the seq. $\{p_n\}_{n=1}^\infty$ generated by the Bisection Method converges to a root $p\in(a,b)$ of $f(x)$ and

\begin{align*}
  \left| p - p_n \right| \leq \frac{b- a}{2^n} \text{ for } n=1,2,\ldots
\end{align*}

*** Speed of Convergence

From this theorem, we have

\begin{align*}
  p_n = p + O\left(\frac{1}{2^n}\right).
\end{align*}

Additionally, from the theorem: If we want $|p-p_n|\leq Tol$ then we require

\begin{align*}
  \frac{b-a}{2^n} \leq Tol,\\
  \Rightarrow n \geq \frac{\ln{\frac{b-a}{Tol.}}}{\ln{2}}.
\end{align*}

*** Example

If $[a,b]=[0,1]$ and the tolerance is $10^{-12}$, then

\begin{align*}
  n \geq \frac{\ln{\frac{1-0}{10^{-12}}}}{\ln{2}} \approx 37.
\end{align*}

** Issues

- Not every function that has a root between $a$ and $b$ satisfies $f(a)\cdot f(b)<0$.
